name: Continuous Integration

on: [push, pull_request]

jobs:
  # Use the following command to fix words locally:
  # codespell --ignore-words-list "crate,daa,keypair" --skip "*/target,*-sys" --write-changes
  check-spelling:
    name: Check spelling
    runs-on: ubuntu-latest
    steps:
      - name: Check spelling
        uses: codespell-project/actions-codespell@master
        with:
          ignore_words_list: "crate,daa,keypair"
          path: tss-esapi
          skip: "*/target,*-sys"

  formatting:
    name: Check formatting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Check formatting
        run: cargo fmt --all -- --check
  # Check that it builds with the Minimum Supported Rust Version
  msrv:
    name: Check minimum supported rust version (MSRV)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build the container
        run: docker build -t ubuntucontainer tss-esapi/tests/ --file tss-esapi/tests/Dockerfile-ubuntu
      - name: Run the container
        run: docker run -v $(pwd):/tmp/rust-tss-esapi -w /tmp/rust-tss-esapi/tss-esapi --env RUST_TOOLCHAIN_VERSION=1.57.0 ubuntucontainer /tmp/rust-tss-esapi/tss-esapi/tests/all-ubuntu.sh
  # All in one job as I think it is a big overhead to build and run the Docker
  # container?
  tests-ubuntu:
    name: Ubuntu tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build the container
        run: docker build -t ubuntucontainer tss-esapi/tests/ --file tss-esapi/tests/Dockerfile-ubuntu
      - name: Run the container
        run: docker run -v $(pwd):/tmp/rust-tss-esapi -w /tmp/rust-tss-esapi/tss-esapi ubuntucontainer /tmp/rust-tss-esapi/tss-esapi/tests/all-ubuntu.sh
      - name: Run the cross-compilation script
        run: docker run -v $(pwd):/tmp/rust-tss-esapi -w /tmp/rust-tss-esapi/tss-esapi ubuntucontainer /tmp/rust-tss-esapi/tss-esapi/tests/cross-compile.sh
      - name: Check the documentation
        run: docker run -v $(pwd):/tmp/rust-tss-esapi -w /tmp/rust-tss-esapi/tss-esapi ubuntucontainer cargo doc

  tests-ubuntu-v3:
    name: Ubuntu tests on v3.x.y of tpm2-tss
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build the container
        run: docker build -t ubuntucontainer tss-esapi/tests/ --build-arg TPM2_TSS_VERSION=3.0.4 --file tss-esapi/tests/Dockerfile-ubuntu
      - name: Run the container
        run: docker run -v $(pwd):/tmp/rust-tss-esapi -w /tmp/rust-tss-esapi/tss-esapi ubuntucontainer /tmp/rust-tss-esapi/tss-esapi/tests/all-ubuntu.sh

  tests-fedora:
    name: Fedora tests
    # We just build a container... GitHub doesn't like Fedora :(
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build the container
        run: docker build -t fedoracontainer tss-esapi/tests/ --file tss-esapi/tests/Dockerfile-fedora
      - name: Run the tests
        run: docker run -v $(pwd):/tmp/rust-tss-esapi -w /tmp/rust-tss-esapi/tss-esapi fedoracontainer dbus-run-session -- /tmp/rust-tss-esapi/tss-esapi/tests/all-fedora.sh

  tests-fedora-rawhide:
    name: Fedora rawhide tests
    # We just build a container... GitHub doesn't like Fedora :(
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build the container
        run: docker build -t fedoracontainer tss-esapi/tests/ --file tss-esapi/tests/Dockerfile-fedora-rawhide
      - name: Run the tests
        run: docker run -v $(pwd):/tmp/rust-tss-esapi -w /tmp/rust-tss-esapi/tss-esapi --security-opt seccomp=unconfined fedoracontainer dbus-run-session -- /tmp/rust-tss-esapi/tss-esapi/tests/all-fedora.sh

  tests-valgrind:
    name: Valgrind test run
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build the container
        run: docker build -t ubuntucontainer tss-esapi/tests/ --file tss-esapi/tests/Dockerfile-ubuntu
      - name: Run the tests
        run: docker run -v $(pwd):/tmp/rust-tss-esapi -w /tmp/rust-tss-esapi/tss-esapi ubuntucontainer /tmp/rust-tss-esapi/tss-esapi/tests/valgrind.sh
